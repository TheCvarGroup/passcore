name: Windows Build and Release

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  semantic-release:
    runs-on: ubuntu-latest
    outputs:
      new-release-published: ${{ steps.semantic-release.outputs.new-release-published }}
      new-release-version: ${{ steps.semantic-release.outputs.new-release-version }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: npm ci --prefix src/Unosquare.PassCore.Web/ClientApp
        
    - name: Build frontend
      run: npm run build --prefix src/Unosquare.PassCore.Web/ClientApp
        
    - name: Semantic Release
      id: semantic-release
      uses: cycjimmy/semantic-release-action@v4
      with:
        semantic_version: 21
        extra_plugins: |
          @semantic-release/changelog
          @semantic-release/git
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-windows:
    needs: semantic-release
    if: needs.semantic-release.outputs.new-release-published == 'true'
    runs-on: windows-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'src/Unosquare.PassCore.Web/ClientApp/package-lock.json'
        
    - name: Restore .NET dependencies
      run: dotnet restore
      
    - name: Build .NET solution
      run: dotnet build --configuration Release --no-restore
      
    - name: Install npm dependencies
      run: npm ci
      working-directory: src/Unosquare.PassCore.Web/ClientApp
      
    - name: Build frontend
      run: npm run build
      working-directory: src/Unosquare.PassCore.Web/ClientApp
      
    - name: Publish .NET application
      run: dotnet publish --configuration Release --no-build --output ./publish --self-contained false
      
    - name: Set version info
      run: |
        $version = "${{ needs.semantic-release.outputs.new-release-version }}"
        $buildDate = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
        echo "Version: $version" > version.txt
        echo "Build Date: $buildDate" >> version.txt
        echo "Build Environment: GitHub Actions" >> version.txt
        
    - name: Create release archive
      run: |
        Compress-Archive -Path "./publish/*" -DestinationPath "passcore-${{ needs.semantic-release.outputs.new-release-version }}-windows.zip"
        
    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.semantic-release.outputs.upload_url }}
        asset_path: ./passcore-${{ needs.semantic-release.outputs.new-release-version }}-windows.zip
        asset_name: passcore-${{ needs.semantic-release.outputs.new-release-version }}-windows.zip
        asset_content_type: application/zip
